Opal.modules["nodejs/runtime"]=function($opal){$opal.dynamic_require_severity="error";var self=$opal.top,$scope=$opal,nil=$opal.nil,$breaker=$opal.breaker,$slice=$opal.slice,$module=$opal.module;$opal.add_stubs([]);(function(){var OpalNode,extensions,fs,parser,parserFile,source,sourceFile,vm,__path__;fs=require("fs");__path__=require("path");vm=require("vm");OpalNode=function(){function OpalNode(){}OpalNode.node_require=require;return OpalNode}();global.OpalNode=OpalNode}).call(this);return function($base){var self=$module($base,"NodeJS");var def=self._proto,$scope=self._scope;$opal.defs(self,"$require",function(name){var self=this;return OpalNode.node_require(name)})}(self)};Opal.modules["nodejs/file"]=function($opal){$opal.dynamic_require_severity="error";var self=$opal.top,$scope=$opal,nil=$opal.nil,$breaker=$opal.breaker,$slice=$opal.slice,$klass=$opal.klass;$opal.add_stubs(["$join","$raise","$message","$error","$call","$exist?"]);return function($base,$super){function $File(){}var self=$File=$klass($base,$super,"File",$File);var def=self._proto,$scope=self._scope,TMP_1;__fs__=OpalNode.node_require("fs");__path__=OpalNode.node_require("path");$opal.defs(self,"$read",function(path){var self=this;return __fs__.readFileSync(path).toString()});$opal.defs(self,"$exist?",function(path){var self=this;return __fs__.existsSync(path)});$opal.defs(self,"$realpath",TMP_1=function(pathname,dir_string,cache){var self=this,$iter=TMP_1._p,block=$iter||nil;if(dir_string==null){dir_string=nil}if(cache==null){cache=nil}TMP_1._p=null;if(dir_string!==false&&dir_string!==nil){pathname=self.$join(dir_string,pathname)}if(block!==nil){__fs__.realpath(pathname,cache,function(error,realpath){if(error)self.$raise(self.$error().$message());else block.$call(realpath)})}else{return __fs__.realpathSync(pathname,cache)}});$opal.defs(self,"$basename",function(path,ext){var self=this;return __path__.basename(path,ext)});$opal.defs(self,"$dirname",function(path){var self=this;return __path__.dirname(path)});$opal.defs(self,"$join",function(paths){var self=this;paths=$slice.call(arguments,0);return __path__.join.apply(__path__,paths)});$opal.defs(self,"$directory?",function(path){var $a,self=this;if(($a=self["$exist?"](path))!==nil&&(!$a._isBoolean||$a==true)){}else{return nil}return!!__fs__.lstatSync(path).isDirectory()});return($opal.defs(self,"$file?",function(path){var $a,self=this;if(($a=self["$exist?"](path))!==nil&&(!$a._isBoolean||$a==true)){}else{return nil}return!!__fs__.lstatSync(path).isFile()}),nil)&&"file?"}(self,null)};Opal.modules["nodejs/dir"]=function($opal){$opal.dynamic_require_severity="error";var self=$opal.top,$scope=$opal,nil=$opal.nil,$breaker=$opal.breaker,$slice=$opal.slice,$klass=$opal.klass;$opal.add_stubs([]);return function($base,$super){function $Dir(){}var self=$Dir=$klass($base,$super,"Dir",$Dir);var def=self._proto,$scope=self._scope;__glob__=OpalNode.node_require("glob");$opal.defs(self,"$[]",function(glob){var self=this;return __glob__.sync(glob)});def.$pwd=function(){var self=this;return process.cwd()};return $opal.defn(self,"$getwd",def.$pwd)}(self,null)};Opal.modules["nodejs/io"]=function($opal){$opal.dynamic_require_severity="error";var $a,$b,TMP_1,$c,TMP_2,self=$opal.top,$scope=$opal,nil=$opal.nil,$breaker=$opal.breaker,$slice=$opal.slice,$gvars=$opal.gvars;if($gvars.stdout==null)$gvars.stdout=nil;if($gvars.stderr==null)$gvars.stderr=nil;$opal.add_stubs(["$write_proc=","$lambda"]);$gvars.stdout["$write_proc="](($a=($b=self).$lambda,$a._p=(TMP_1=function(string){var self=TMP_1._s||this;if(string==null)string=nil;return process.stdout.write(string)},TMP_1._s=self,TMP_1),$a).call($b));return $gvars.stderr["$write_proc="](($a=($c=self).$lambda,$a._p=(TMP_2=function(string){var self=TMP_2._s||this;if(string==null)string=nil;return process.stderr.write(string)},TMP_2._s=self,TMP_2),$a).call($c))};Opal.modules["nodejs/process"]=function($opal){$opal.dynamic_require_severity="error";var self=$opal.top,$scope=$opal,nil=$opal.nil,$breaker=$opal.breaker,$slice=$opal.slice,$module=$opal.module;$opal.add_stubs(["$new","$to_s"]);(function($base){var self=$module($base,"Kernel");var def=self._proto,$scope=self._scope;def.$exit=function(){var self=this;return process.exit()};$opal.donate(self,["$exit"])})(self);$opal.cdecl($scope,"ARGV",process.argv.slice(2));$opal.cdecl($scope,"ENV",$scope.get("Object").$new());$opal.defs($scope.get("ENV"),"$[]=",function(name,value){var self=this;return process.env[name.$to_s()]=value.$to_s()});return($opal.defs($scope.get("ENV"),"$[]",function(name){var self=this;return process.env[name]||nil}),nil)&&"[]"};(function($opal){$opal.dynamic_require_severity="error";var self=$opal.top,$scope=$opal,nil=$opal.nil,$breaker=$opal.breaker,$slice=$opal.slice;$opal.add_stubs(["$require"]);self.$require("nodejs/runtime");self.$require("nodejs/file");self.$require("nodejs/dir");self.$require("nodejs/io");return self.$require("nodejs/process")})(Opal);